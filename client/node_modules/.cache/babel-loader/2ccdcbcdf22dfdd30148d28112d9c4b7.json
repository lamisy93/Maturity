{"ast":null,"code":"import _slicedToArray from \"/home/aminata/Downloads/BACK-FRONT/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/aminata/Downloads/BACK-FRONT/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aminata/Downloads/BACK-FRONT/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aminata/Downloads/BACK-FRONT/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aminata/Downloads/BACK-FRONT/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aminata/Downloads/BACK-FRONT/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aminata/Downloads/BACK-FRONT/client/src/components/FeaturesTeam/FeaturesTeamCard/FeaturesTeamCard.js\";\nimport \"./FeaturesTeamCard.scss\";\nimport { Link } from \"react-router-dom\";\nimport React, { Component, Fragment } from \"react\";\n\nvar classNames = require(\"classnames\");\n\nvar FeaturesTeam =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FeaturesTeam, _Component);\n\n  function FeaturesTeam() {\n    var _this;\n\n    _classCallCheck(this, FeaturesTeam);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FeaturesTeam).call(this));\n\n    _this.componentDidMount = function () {\n      Promise.all([fetch(\"/api/v1/campaign/getfeaturesTeam\"), fetch(\"/api/v1/campaign\")]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            res1 = _ref2[0],\n            res2 = _ref2[1];\n\n        return Promise.all([res1.json(), res2.json()]);\n      }).then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            data1 = _ref4[0],\n            data2 = _ref4[1];\n\n        return _this.setState({\n          featuresTeam: data1,\n          campaign: data2\n        });\n      });\n    };\n\n    _this.getLastCampaignState = function (ftId) {\n      var state;\n\n      for (var i = 0; i < _this.state.campaign.length; i++) {\n        if (_this.state.campaign[i].ft_id === ftId) {\n          state = _this.state.campaign[0].state;\n          break;\n        }\n      } // const currentCampaign = this.state.campaign.find(\n      //   ({ idft }) => idft === ftId\n      // );\n\n\n      switch (state) {\n        case 0:\n          return \"En cours\";\n\n        case 1:\n          return \"Terminée\";\n\n        default:\n          return \"Aucune campagne\";\n      }\n    };\n\n    _this.getLastCampaignName = function (ftId) {\n      var name = [];\n\n      for (var i = 0; i < _this.state.campaign.length; i++) {\n        console.log(_this.state.campaign[i]);\n        if (_this.state.campaign.ft_id === ftId) name = _this.state.campaign[0].namecamp;\n      }\n\n      console.log(\"test\", name);\n      return name;\n    };\n\n    _this.state = {\n      featuresTeam: [],\n      campaign: []\n    };\n    return _this;\n  }\n\n  _createClass(FeaturesTeam, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.state.featuresTeam.map(function (ft) {\n        return React.createElement(Link, {\n          key: ft.id,\n          to: {\n            pathname: \"/Section/\".concat(ft.name, \"/\").concat(ft.id)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"ft-card\",\n          key: ft.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classNames(\"ft-card-icon\", ft.theme),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: ft.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        })), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, ft.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, _this2.getLastCampaignName(ft.id)), React.createElement(\"div\", {\n          className: \"hr\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"ft-card-statut\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), _this2.getLastCampaignState(ft.id)));\n      }));\n    }\n  }]);\n\n  return FeaturesTeam;\n}(Component);\n\nexport { FeaturesTeam as default };","map":{"version":3,"sources":["/home/aminata/Downloads/BACK-FRONT/client/src/components/FeaturesTeam/FeaturesTeamCard/FeaturesTeamCard.js"],"names":["Link","React","Component","Fragment","classNames","require","FeaturesTeam","componentDidMount","Promise","all","fetch","then","res1","res2","json","data1","data2","setState","featuresTeam","campaign","getLastCampaignState","ftId","state","i","length","ft_id","getLastCampaignName","name","console","log","namecamp","map","ft","id","pathname","theme","icon"],"mappings":";;;;;;;AAAA,OAAO,yBAAP;AACA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AACA,IAAMC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;IAEqBC,Y;;;;;AACnB,0BAAc;AAAA;;AAAA;;AACZ;;AADY,UAQdC,iBARc,GAQM,YAAM;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,CACVC,KAAK,CAAC,kCAAD,CADK,EAEVA,KAAK,CAAC,kBAAD,CAFK,CAAZ,EAIGC,IAJH,CAIQ;AAAA;AAAA,YAAEC,IAAF;AAAA,YAAQC,IAAR;;AAAA,eAAkBL,OAAO,CAACC,GAAR,CAAY,CAACG,IAAI,CAACE,IAAL,EAAD,EAAcD,IAAI,CAACC,IAAL,EAAd,CAAZ,CAAlB;AAAA,OAJR,EAKGH,IALH,CAKQ;AAAA;AAAA,YAAEI,KAAF;AAAA,YAASC,KAAT;;AAAA,eACJ,MAAKC,QAAL,CAAc;AACZC,UAAAA,YAAY,EAAEH,KADF;AAEZI,UAAAA,QAAQ,EAAEH;AAFE,SAAd,CADI;AAAA,OALR;AAWD,KApBa;;AAAA,UAsBdI,oBAtBc,GAsBS,UAAAC,IAAI,EAAI;AAC7B,UAAIC,KAAJ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAKD,KAAL,CAAWH,QAAX,CAAoBK,MAAxC,EAAgDD,CAAC,EAAjD,EAAqD;AACnD,YAAI,MAAKD,KAAL,CAAWH,QAAX,CAAoBI,CAApB,EAAuBE,KAAvB,KAAiCJ,IAArC,EAA2C;AACzCC,UAAAA,KAAK,GAAG,MAAKA,KAAL,CAAWH,QAAX,CAAoB,CAApB,EAAuBG,KAA/B;AACA;AACD;AACF,OAP4B,CAS7B;AACA;AACA;;;AAEA,cAAQA,KAAR;AACE,aAAK,CAAL;AACE,iBAAO,UAAP;;AACF,aAAK,CAAL;AACE,iBAAO,UAAP;;AACF;AACE,iBAAO,iBAAP;AANJ;AAQD,KA3Ca;;AAAA,UA6CdI,mBA7Cc,GA6CQ,UAAAL,IAAI,EAAI;AAC5B,UAAIM,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAKD,KAAL,CAAWH,QAAX,CAAoBK,MAAxC,EAAgDD,CAAC,EAAjD,EAAqD;AACnDK,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKP,KAAL,CAAWH,QAAX,CAAoBI,CAApB,CAAZ;AACA,YAAI,MAAKD,KAAL,CAAWH,QAAX,CAAoBM,KAApB,KAA8BJ,IAAlC,EACEM,IAAI,GAAG,MAAKL,KAAL,CAAWH,QAAX,CAAoB,CAApB,EAAuBW,QAA9B;AACH;;AACDF,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACA,aAAOA,IAAP;AACD,KAtDa;;AAEZ,UAAKL,KAAL,GAAa;AACXJ,MAAAA,YAAY,EAAE,EADH;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAFY;AAMb;;;;6BAkDQ;AAAA;;AACP,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKG,KAAL,CAAWJ,YAAX,CAAwBa,GAAxB,CAA4B,UAAAC,EAAE;AAAA,eAC7B,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,EAAE,CAACC,EAAd;AAAkB,UAAA,EAAE,EAAE;AAAEC,YAAAA,QAAQ,qBAAcF,EAAE,CAACL,IAAjB,cAAyBK,EAAE,CAACC,EAA5B;AAAV,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAyB,UAAA,GAAG,EAAED,EAAE,CAACC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAE7B,UAAU,CAAC,cAAD,EAAiB4B,EAAE,CAACG,KAApB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAEH,EAAE,CAACI,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKJ,EAAE,CAACL,IAAR,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,MAAI,CAACD,mBAAL,CAAyBM,EAAE,CAACC,EAA5B,CAAJ,CALF,EAME;AAAK,UAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,EAOE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,EASG,MAAI,CAACb,oBAAL,CAA0BY,EAAE,CAACC,EAA7B,CATH,CADF,CAD6B;AAAA,OAA9B,CADH,CADF;AAmBD;;;;EA7EuC/B,S;;SAArBI,Y","sourcesContent":["import \"./FeaturesTeamCard.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { Component, Fragment } from \"react\";\r\nconst classNames = require(\"classnames\");\r\n\r\nexport default class FeaturesTeam extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      featuresTeam: [],\r\n      campaign: []\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    Promise.all([\r\n      fetch(\"/api/v1/campaign/getfeaturesTeam\"),\r\n      fetch(\"/api/v1/campaign\")\r\n    ])\r\n      .then(([res1, res2]) => Promise.all([res1.json(), res2.json()]))\r\n      .then(([data1, data2]) =>\r\n        this.setState({\r\n          featuresTeam: data1,\r\n          campaign: data2\r\n        })\r\n      );\r\n  };\r\n\r\n  getLastCampaignState = ftId => {\r\n    let state;\r\n    for (let i = 0; i < this.state.campaign.length; i++) {\r\n      if (this.state.campaign[i].ft_id === ftId) {\r\n        state = this.state.campaign[0].state;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // const currentCampaign = this.state.campaign.find(\r\n    //   ({ idft }) => idft === ftId\r\n    // );\r\n\r\n    switch (state) {\r\n      case 0:\r\n        return \"En cours\";\r\n      case 1:\r\n        return \"Terminée\";\r\n      default:\r\n        return \"Aucune campagne\";\r\n    }\r\n  };\r\n\r\n  getLastCampaignName = ftId => {\r\n    let name = [];\r\n    for (let i = 0; i < this.state.campaign.length; i++) {\r\n      console.log(this.state.campaign[i]);\r\n      if (this.state.campaign.ft_id === ftId)\r\n        name = this.state.campaign[0].namecamp;\r\n    }\r\n    console.log(\"test\", name);\r\n    return name;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {this.state.featuresTeam.map(ft => (\r\n          <Link key={ft.id} to={{ pathname: `/Section/${ft.name}/${ft.id}` }}>\r\n            <div className=\"ft-card\" key={ft.id}>\r\n              <div className={classNames(\"ft-card-icon\", ft.theme)}>\r\n                <i className={ft.icon} />\r\n              </div>\r\n              <h3>{ft.name}</h3>\r\n              <p>{this.getLastCampaignName(ft.id)}</p>\r\n              <div className=\"hr\" />\r\n              <div className=\"ft-card-statut\" />\r\n\r\n              {this.getLastCampaignState(ft.id)}\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}